#+PROPERTY: header-args :shebang #!/bin/env zsh

* k8s
#+BEGIN_SRC sh
k8s_get_labels() {
  kubectl get po --no-headers | awk '{print $1}' | rg yag --smart-case --color never $1 | xargs kubectl get -o yaml po | rg -A3 labels
}

kc_ubuntu() {
    kubectl run -i --tty --image ubuntu:latest ubuntu-test --restart=Never --rm /bin/bash
}
#+END_SRC
* emacs
#+BEGIN_SRC sh
emacs_ediff() {
  if [ -d $1 ]; then
    emacsclient -c -q --eval "(ediff-directories \"$1\" \"$2\" \"\")"
  else
    emacsclient -c -q --eval "(ediff-files \"$1\" \"$2\")"
  fi
}

emacs_ediff3() {
  if [ $# -ne 3 ]; then
    echo Usage: $0 local base other
    exit 1
  fi
  emacsclient -c -q --eval '(ediff-merge-with-ancestor "'$1'" "'$2'" "'$3'")'
}
#+END_SRC
[[https://emacs.stackexchange.com/a/649][@stackexchange.com]]
#+BEGIN_SRC sh
emacs_unfreeze() {
    pgrep -x emacs | xargs kill -SIGUSR2
}
#+END_SRC
* gpg
#+BEGIN_SRC sh
gpg_recients() {
gpg --list-only --no-default-keyring --secret-keyring /dev/null
}
#+END_SRC
fix tty
[[https://unix.stackexchange.com/questions/217737/pinentry-fails-with-gpg-agent-and-ssh][@stackexchange.com]]
#+BEGIN_SRC sh
gpgconf --kill gpg-agent
echo "UPDATESTARTUPTTY" | gpg-connect-agent > /dev/null 2>&1
or emacs setenv to echo $GPG_TTY manually
#+END_SRC
* bash
#+BEGIN_SRC sh
mkcd() {
  case "$1" in
  */.. | */../) cd -- "$1" ;; # that doesn't make any sense unless the directory already exists
  /*/../*) (cd "${1%/../*}/.." && mkdir -p "./${1##*/../}") && cd -- "$1" ;;
  /*) mkdir -p "$1" && cd "$1" ;;
  */../*) (cd "./${1%/../*}/.." && mkdir -p "./${1##*/../}") && cd "./$1" ;;
  ../*) (cd .. && mkdir -p "${1#.}") && cd "$1" ;;
  *) mkdir -p "./$1" && cd "./$1" ;;
  esac
}
#+END_SRC
* github dl
#+BEGIN_SRC sh
curl https://codeload.github.com/stakater/IngressMonitorController/tar.gz/master | \
  tar -xz --strip=4 IngressMonitorController-master/deployments/kubernetes/chart/ingressmonitorcontroller
#+END_SRC
* pacman restore package backup files
pacman -Qii | awk '/^MODIFIED/ {print $2}' | sed -ne 's|/etc/pam.d/\(.*\)|\1|p' | xargs -I bu_file sudo sh -c 'pkg-extract_original /etc/pam.d/bu_file > /etc/pam.d/bu_file'
* helm
#+BEGIN_SRC sh
helm fetch --untar --untardir . 'fluent-bit'
helm template -f ./fluentbit-helm-values.yml --output-dir './fluent-bit-final' './fluent-bit
#+END_SRC
* ssh
#+BEGIN_SRC sh
ssh -L localhost:9200:192.168.16.2:9200 root@10.1.10.70
#+END_SRC
* ssl
#+BEGIN_SRC sh
ssl_certs() {
    server="$1"
    openssl s_client -showcerts -servername $server -connect $server:443 </dev/null  | openssl x509 -inform pem -noout -text
}
#+END_SRC
* unpack
aunpack -F 7z -O-p$PASSWORD sslarchive.zip

* xinput
#+BEGIN_SRC sh
xinput_list() {
    xinput --list
}
xinput_disable() {
    xinput --disable $1
}
#+END_SRC
* rdp
#+BEGIN_SRC sh
rdp() {
    ip=$1
    domain=$2
    user=$3
    rdesktop -u "$domain\$user" -k de -g 1800x1080 $ip
}
#+END_SRC
* zsh
antibody bundle < $XDG_CONFIG_HOME/zsh/zsh_plugins.txt > $XDG_CONFIG_HOME/zsh/zsh_plugins.sh
* multiline replace
fd network-policies.yml.j2 deploymentsets -x perl -0777 -i -pe 's/(?<match>    - podSelector:\n        matchLabels:\n          deploymentSet: svhb-device-gateway\n          podName: svhb-device-gateway)/$+{match}\n    # TODO: This selector can be removed once the new, split-up svhb deploymentSets (SHCB-889) have found their way to prod\n    - podSelector:\n        matchLabels:\n          deploymentSet: svhb\n          podName: svhb-device-gateway/g' {}
* pandoc
pandoc --self-contained -t html -o bosse.pdf bosse.md
* git
pandoc --self-contained -t html -o bosse.pdf bosse.md
* end
#+BEGIN_SRC sh
if declare -f $1 >/dev/null; then
  $1 $@
else
  compgen -A function
fi

#+END_SRC
